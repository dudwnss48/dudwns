SQL
	- Structured Query Language
	- 구조화된 질의 언어
		- SQL 명령어는
	- DBMS의 테이터에 엑세스 하는 명령어다.
	- 종류
		SELECT : 데이터 조회
		DML(Data Manipulation Language:데이터 조작어)
			INSERT, UPDATE, DATE, MARGE
		DDL(Data Definition Language:데이터 정의어)
			CREATE, DROP, ALTET, RENAME, TURNCATE
		DCL(Data Control Language:데이터 제어어)
			COMMIT, ROLLBACK, SAVEPOINT

select 문

	- 테이블의 데이터를 조회하는 명령문이다.
	- 조회기능
		- 프로젝션 : 조회결과로 반환되는 열(컬럼)을 사용자가 선택할 수 있다.
		- 선택 : 조회결과로 반환되는 행을 다양한 조건으로 제한할 수 있다.
		- 조인 : 두 개 이상의 테이블을 연결해서 각 테이블에 저장된 데이터를 한 번에 가져올 수 있다.

	- 가장 기본적인 조회기능
		- 테이블의 모든 행과 모든 열을 조회하기
			SELECT *
			FROM	테이블명;
		
		- 테이블에서 특정 컬럼을 선택해서 조회하기
			SELECT	컬럼명, 컬럼명, 컬럼명, ...
			FROM	테이블명; 

		- 산술연산자(+, -, *, /) 사용하기
			SELECT 	컬럼명 + 10, 컬럼명 + 컬럼명, (컬럼명*2) + 컬럼명, ...
			FROM 	테이블명;

			* 산술연산자를 사용하는 산술식에 NULL값이 포함되어 있으면
			   연산결과는 항강 NULL이다.
			* 오라클에서 NULL은 값이 결정되지 않았다는 의미다.
			
		- 별칭(Alias) 정의하기
			* 컬럼명의 이름을 변경한다.(단, 테이블의 컬럼명이 변경되는 것은 아니다.)
			* 계산식이 포함된 컬럼에 적절한 이름을 붙일 때 유용하다.
			* 별칭은 컬럼명 바로 뒤에 적는다. 컬럼명과 별칭 사이에 as 키워드를 사용할 수 있다.
			* 별칭에 특수문자, 공백이 포함되는 경우 ""를 사용해야 한다.
			SELECT 	컬럼명 별칭, 컬럼명 AS 별칭, ...
			FROM	테이블명;
		- 중복행없이 조회하기
			SELECT DISTINCT 컬럼명, 컬럼명, ...
			FROM 	테이블명
			* DISTINCT 키워드는 제시된 칼럼의 값이 동일한 행은 한 번만 조회한다.

	- 선택되는 행의 제한
		SELECT 	컬럼명, 컬럼명, 컬럼명, ...
		FROM	테이블명
		WHERE	조건식;
		* 조건식의 연산결과가 true로 판정되는 행만 선택된다.
		* 비교 연산자
			= 				같다 
			>				크다
			>=				크거나 같다
			<				작다
			<=				작거나 같다
			<>				같지않다
			!=				같지않다
			between A(하한값) and B(상한값)	값의 범위에 포함(하한값,상한값도 포함)
			in (값1, 값2, 값3, ...)		제시된 값들 중에서 하나라도 일치한 것
			like 문자패턴			문자패턴과 일치하는 것
				* 와일드카드
					%	0개 이상의 문자
					_ 	문자하나
			is null				null값인 것
			is not null			null값이 아닌 것
		* 조건식 
			where 	컬럼명 	비교연산자	값	
			where	연산식	비교연산자	값
			where	연산식	비교연산자	연산식		
			작성예)
				where salary > 6000;
				where department_id = 70;
				where salary*12 > 50000;
				where manager_id is not null;
				where department_id in (10,20);
				where job_id in ('AD_PRES', 'AD_VP');
		* 논리 연산자
			and	조건식의 모든 조건이 true일 때 true를 반환한다.
			or	조건식의 조건 중 하나라도 true일 때 true를 반환한다.
			not	조건식의 연산결과를 반전시킨다.
		* 논리 연산자가 포함된 조건식
			where 컬럼명 비교연산자 값 and 컬럼명 비교연산자 조건식
			작성예)
				where department_id = 60 and salary >=5000;
				where department_id = 60 and jab_id like '%MAN';
				where salary >= 10000 and salary <= 20000;
				where department_id in (50, 60, 70) and salary >15000;

	- 정렬하기
		* ORDER BY 절을 사용하면 행을 정렬할 수 있다.
		* ORDER BY 절은 SELECT문의 가장 끝에 위치한다.
		* ORDER BY 절에서는 정렬 조건으로 컬럼명, 연산식, 별칭, 컬럼의 순번을 지정할 수 있다.
		* ORDER BY 절
			SELECT 컬럼명, 컬럼명, 컬럼명
			FROM 테이블명
			[WHERE 조건식]
			[ORDER BY 정렬조건 ASC:오름차순, 기본값| DESC:내림차순]

- 오라클 내장함수
	- 단일행 함수
		- 행 당 하나의 결과를 반환한다.
		- 조회된 각 행에 대해서 함수가 실행된다.
		- 중첩해서 사용할 수 있다.
		- 종류
			문자함수
				LOWER(표현식)
					소문자로 변환한다.
				UPPER(표현식)
					대문자로 변환한다.
				LANGTH(표현식)
					문자의 길이를 반환한다.
				CONCAT(표현식1, 표현식2)
					문자를 이어붙여서 반환한다.
				SUBSTR(표현식, 시작위치)
					시작위치에서 끝까지 잘라낸 문자를 반환한다.
				SYBSTR(표현식, 시작위치, 길이)
					시작위치에서 지정된 길이만큼 잘라낸 문자를 반환한다
				INSTR(표현식, '문자')
					지정된 문자가 등장하는 위치를 반환한다.(1부터 시작)				
				LPAD(표현식, 길이, '문자')
					지정된 길이보다 짧으면 모자란 갯수만큼 왼쪽에 지정된 문자를 붙여서 반환한다.
				RPAD(표현식, 길이, '문자')
					지정된 길이보다 짧으면 모자란 갯수만큼 오른쪽에 지정된 문자를 붙여서 반환한다.
				TRIM(표현식)
					불필요한 공백을 제거한 후 반환한다.
				REPLACE(표현식, '변경할 문자', '새문자')
					문자를 찾아서 새문자로 바꾼 다음 반환한다.
			숫자함수
				ROUND(표현식, 숫자)
					지정된 숫자의 자리수까지 반올림한다.
				TRUNC(표현식, 숫자)
					지정된 숫자의 자리만 남기고 나머지는 버린다.
				MOD(숫자1, 숫자2)
					숫자1에 대한 숫자 2의 나머지 값을 반환한다.
				* ROUND와 TRUNC에서 숫자 값이 양수면 소숫점 자리수를 나타내고,
							     0이면 1의 자리수	
							     음수이면 10의 자리수 이상을 나타낸다.
			날짜함수
				SYSDATE
					매개변수값이 필요없어서 괄호는 생략하고 사용한다.
					시스템의 현재 날짜와 시간정보를 반환한다.
				MONTHS_BETWEEN(날짜, 날짜)
					두 날짜사이의 개월 수를 반환한다.
				ADD_MONTHS(날짜, 숫자)
					날짜에 숫자만큼 경과된 개월 수의 날짜를 반환한다.
				ROUND(날짜)
					가장 가까운 날짜로 반올림한다.
				TRUNC(날짜)
					가장 가까운 날짜에 맞춰 버린다.
				NEXT_DAY(날짜, 요일)
					지정된 날짜를 기준으로 다음 번 해당 요일의 날짜를 반환한다.
					요일 : 1-일요일, 2-월요일, ..., 7-토요일
				LAST_DAY (날짜)
					지정된 날짜가 속해있는 달의 마지막 날짜
				시간과 관련된 연산
					DATE + 숫자 = 숫자만큼 경과된 DATE
					DATE - 숫자 = 숫자만큼 이전의 DATE
					DATE - DATE = 두 날짜간의 간격을 일 단위로 반환
					* 날짜 관련 연산을 할 때는 TRUNC()를 사용해서
					   날짜에서 시분초를 0으로 만든다음 연산을 수행하자.			
			변환함수
			TO_CHAR(날짜, '포맷형식')
				날짜를 지정된 포맷형식의 텍스트로 반환한다.
			TO_DATE(문자, '패턴형식')
				문자가 지정된 패턴형식으로 작성되어 있으면 날짜로 변환해서 반환한다.
			TO_CHAR(숫자, '포맷형식')
				숫자를 지정된 포맷형식의 텍스트로 반환한다.
			TO_NUMBER(문자, '패턴형식')
				문자가 지정된 패턴형식으로 작성되어 있으면 숫자로 변환해서 반환한다.
			* 날짜형식 기호
				YYYY	네자리 년도
				MM	월
				DD	일
				DAY	요일
				AM	오전/오후
				HH	12시간제
				HH24	24시간제
				MI	분
				SS	초
			* 숫자형식 기호
				9 	숫자를 표시한다.
				0	0을 강제로 표시한다.
				,	천단위 구분자를 표시한다.
				.	소숫점을 표시한다.
				$	주소값을 고정한다.
				
			기타함수
				NVL(표현식, 값)
					표현식의 값이 NULL이 아니면 표현식의 값이 반환되고,
					표현식의 값이 NULL이면 지정된 값이 반환된다.
					* 표현식의 값의 타입과 대체할 값의 타입은 동일해야한다.
				NVL2(표현식, 값1, 값2)
					표현식의 값이 NULL이 아니면 값1이 반환되고, 
					표현식의 값이 NULL이면 값2가 반환된다.
					* 값1과 값2 의 타입은 동일해야 한다.
				DECODE(표현식, 값1, 결과값1
					         값2, 결과값2
					         값3, 결과값3
						  결과값4)
					표현식의 값이 값1과 일치하면 결과값1이 반환되고,
						     값2와 일치하면 결과값2가 반환된다.
						     표현식과 일치하는 값이 존재하지 않으면 결과값 4가 반환된다.
				CASE
					WHEN 조건식1 THEN 결과값1
					WHEN 조건식2 THEN 결과값2
					ELSE 결과값3
				END
					조건식1이 TRUE면 결과값1이 최종값이 되고,
					조건식2가 TRUE면 결과값2가 최종값이 된다.
					모든 조건식이 FALSE로 판정되면 결과값3이 최종값이 된다.

				* 표현식은 컬럼이름 혹은 연산식을 말한다.


	- 다중행 함수
		- 행 집합에 적용되며, 각 그룹당 하나의 결과를 반환한다.
		- 행 집합은 테이블 전체 또는 그룹화된 테이블이다.
		- 합계, 평균, 최대값, 최소값, 분산, 표준편차, 등을 구할 수 있다.
