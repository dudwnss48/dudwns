URL(Uniform Resource Locator)
	- 자원의 물리적인 위치를 나타내는 주소다.
	- 자원은 웹 프로그램(jsp, php 프로그램), html파일, 그림, 동영상 등
	- 클라이언트(웹브라우져)는 오직 URL로 웹서버(Tomcat)에 요청을 보낼 수 있다.
	- 작성예
		http://www.jhta.co.kr/board/qna/answer.jsp?page=3&no=132
	- URL의 구성
==================================================================================================
			구성요소
------------------------------------------------------------------------------------------------------------------------------
http			프로토콜		웹크리우져와 웹서버가 주고받는
					메세지 작성규칙의 이름을 나타낸다.
www.jhta.co.kr		서버명		클라이언트의 요청을 처리할 서버프로그램이
					실행중인 컴퓨터의 도메인명이나 ip주소로 나타낸다.
board/qna/answer.jsp	경로		클라이언트의 요청을 처리할 웹 애플리케이션이
					위치하고 있는 디렉토리와 파일명을 나타낸다.
page=3&no=132		쿼리 스트링	클라이언트가 서버로 보내는 데이터를 나타낸다.
------------------------------------------------------------------------------------------------------------------------------
* HTTP 메세지 작성규칙에 맞게 요청 메세지를 보낼것이다.
* www.jhta.co.kr컴퓨터야 요청메세지를 받아라.
* /board/qna/answer.jsp를 실행시켜서 나의 요청을 처리해주라.
* 나는 3페이지의 123번 글 정보를 보고싶다.

HTTP(HyperText Transfer Protocol
	- web상에서 웹브라우져와 서버가 주고받는 메세지의 형식을 규정한 프로토콜이다.
	- 메세지 형식
		* 요청메세지
			- 클라이언트가 서버로 보내는 메세지
		* 응답메세지
			- 서버가 클라이언트로 보내는 메세지
		------------------------------------------------------------------------------------------------------------------------------
		구분		헤더부					바디부
		------------------------------------------------------------------------------------------------------------------------------
		요청메세지	요청라인					서버로 전송할 데이터
				* 요청방식
				* 요청URL
				요청헤더정보
				* 클라이언트에 대한 부가적인 정보
				* OS, 브라우져, 국가, 언어코드
		------------------------------------------------------------------------------------------------------------------------------
		응답메세지	응답라인					컨텐츠(html, 그림, 동영상)
				* 응답코드
				응답헤더정보
				* 응답컨텐츠의 타입
				* 응답컨텐츠의 길이				
		------------------------------------------------------------------------------------------------------------------------------

JSP(Java Server Page)
	- 동적인 웹컨텐츠(html 컨텐츠)를 작성하는데 사용되는 자바의 표준 기술이다.
	- 요청을 처리하고, 응답을 제공하기 위한 기능을 제공하고 있다.
	- HTML, XML, JSON, 바이너리 데이터(그림, 영상, 압축파일) 등을 응답으로 제공가능하다.
	- 작성되 JSP를 실행하기 위해서는 반드시 Tomcat과 같은 웹 애플리케이션 서버가 필요하다.

WAS(Web Application Server: 웹애플리케이션 서버)
	- Servlet/JSP로 작성된 애플리케이션 프로그램을 실행시켜주는 서버 프로그램이다.
	-Tomcat, jBoss, webLogic, Jeus 등의 웹애플리케이션 서버 프로그램이 없다.
	- 웹어플리케이션을 실행하기 위해서는 웹서버에 해당 어플리케이션이 배포되어야 한다.

JSP 구성요소
	- 지시어(디렉티브:Directive)
		* JSP 페이지에 대한 설정정보를 지정할 때 사용한다.
		* 형식
			<%@ page 속성="값" 속성="값" ... %>
			* JSP 페이지에 대한 설정정보를 지정한다.
			* 컨텐츠타입, 페이지 인코딩 방식, import할 자바클래스
			   에러페이지, 세션사용여부 등을 설정할 수 있다.

			<%@ include 속성="값" 속성="값" ... %>
			* 다른 JSP 페이지를 현재 페이지에 포함시킨다.

			<%@ taglib 속성="값" 속성="값" ... %>
			* JSP 페이지에서 사용할 태그라이브러리를 지정한다.
	- 스크립틀릿(Scriptlet)
		* JSP 페이지에서 자바 코드를 실행할때 사용하는 자바코드 블록이다.
		* 형식
			<%
				자바코드;
				자바코드;
				(변수선언, 객체생성, 제어문/반복문 실행, 메소드 호출, ... )
			%>
	- 표현식(Expression)
		* 스크립틀릿에서 자바코드 실행의 결과로 획득된 값, 변수에 저장된 값을
		   출력결과(응답컨텐츠)에 포함시킨다.
		* 형식
			<%=변수명 %>
			<%=참조변수.메소드() %> // 반환값이 있는 메소드
	- 선언부(Declaration)
		* JSP 페이지의 스크립틀릿이나 표현식에서 사용할 수 있는 메소드를 작성할 때 사용한다.
		* 형식
			<%!
				public 리턴타입 메소드명(타입 변수명, 타입 변수명, ... ) {
					수행문;
					수행문;
				}
			%>
	- 주석(Comment)
		* JSP 코드를 주석처리할 수 있다.
		* 형식
			<%-- 
				주석처리되는 내용...
				주석처리되는 내용... 
			--%>
GET 
	1. 주소창에 URL직접입력하는 요청
	2. 링크를 클릭해야하는 요청
	3. <form>의 method 속성을 생각하거나 method 속성 "GET"으로 지정하고 submit버튼 클릭하는 경우
	
	- GET요청
		* 데이터의 조회가 목적이다.
		* body부가 비어있다.
		* body부에 요청파라미터를 담아서 서버로 전달할 수 없다.
		* 첨부파일 업로드, 동영상 업로드, 사진업로드 불가능

POST
	1. <form> 태그의 method="post"로 지정하고 submit버튼을 클릭하는 경우

	- POST요청
		* body부가 존재한다.
		* body부에 요청파라미터 정보(폼의 입력값)을 담아서 서버로 전송할 수 있다.
		* 첨부파일 업로드, 동영상 업로드, 사진 업로드 를 할수있다.

Client(클라이언트)가 서버로 데이터를 전달하는 방법
	1. POST -> 요청메세지의 body부에 name=value & name=value의 형식으로 form 입력값을 서버로 전달.
	2. GET   -> 서버로 전달할 값을 요청 URL의 끝에 쿼리스트링 형태로 만들어서 붙인다.

JSP 기본객체
	- 요청객체
		* HttpServerRequest의 구현객체다
		* 클라이언트가 서버로 보낸 요청메세지 정보를 제공한다.
		* jsp에서는 request 변수에 저장되어 있다.
		* 주요 메소드
			- 요청파라미터 관련
			* void 		setCharacterEncoding(String encoding)
		******** String 		get patParameter(String name)
		        ***  String[] 	getParameterValues(String name)
			- 요청메세지 관련
			   String getMethod()
			   String getContextPath()
			   String getRequestURI()
			- 클라이언트 관련
			   String getRemoteADDr()
			- 요청헤더 관련
			   String getHeader(String name)
	- 응답객체
		* HttpServletletResponse의 구현객체다.
		* 서버가 클라이언트로 보내는 응답메세지 정보를 담는다.
		* jsp에서는 response 변수에 저장되어 있다.
		* 주요 메소드
			- 리다이렉트 관련
		      ****  void sendRedirect(String location)
			- 응답컨텐츠 관련
			*   void setContentType(String contentType)
			*   void setContentLength(long len)
			- 응답헤드 관련
			   void sehHeader(String name, Srtring value)






































































